name: Create GCP Infrastructure

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GCP_PROJECT: ${{ secrets.PROJECT_ID }}
  BUCKET_NAME: "${{ secrets.PROJECT_ID }}-tfstate"
  SA_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

jobs:

  lint:
    name: "Lint Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rickardl/tflint-action@v1
        with:
          tflint_actions_folder: /home/runner/work/gcp-terraform-infra/gcp-terraform-infra/src
      
  create-gcp-bucket:
    name: 'GCP-Bucket-Creation'
    needs: 'lint'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      with:
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.PROJECT_ID }}
        export_default_credentials: true 
    
    - name: 'Create Bucket & Enable Object Versioning'
      run: |-
        gsutil mb gs://"$BUCKET_NAME" || echo "Bucket Already Exists"
        gsutil versioning set on gs://"$BUCKET_NAME" || echo "Versioning Already Enabled"
  
  terraform:
    name: 'Terraform'
    needs: 'create-gcp-bucket'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |-     
        cd src/
        terraform init -backend-config "credentials=$SA_CREDENTIALS" -backend-config "bucket=$BUCKET_NAME"
        
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |-
        cd src/
        terraform plan -var "credentials=$SA_CREDENTIALS" -var "project=$GCP_PROJECT" -var "bucket=$BUCKET_NAME"

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: |-
        cd src/
        terraform apply -var "credentials=$SA_CREDENTIALS" -var "project=$GCP_PROJECT" -var "bucket=$BUCKET_NAME" -auto-approve

    # - name: Terraform Destroy
    #   run: |-
    #     cd src/
    #     terraform destroy -var "credentials=$SA_CREDENTIALS" -var "project=$GCP_PROJECT" -var "bucket=$BUCKET_NAME" -auto-approve
